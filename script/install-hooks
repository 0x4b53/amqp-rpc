#!/bin/bash

# All known hooks that might be symlinked.
HOOK_NAMES="applypatch-msg pre-applypatch post-applypatch \
    pre-commit prepare-commit-msg commit-msg post-commit \
    pre-rebase post-checkout post-merge pre-receive update \
    post-receive post-update pre-auto-gc"

# Get locations of project hooks.
HOOK_DIR=$(git rev-parse --show-toplevel)/.git/hooks

for hook in $HOOK_NAMES; do
    # If a hook with the same name exists and is executable but not a symlink,
    # back it up with the suffix `local`.
    if [ ! -h "$HOOK_DIR/$hook" ] && [ -x "$HOOK_DIR/$hook" ]; then
        mv "$HOOK_DIR/$hook" "$HOOK_DIR/$hook.local"
    fi

    # Create symlink, overwriting the file if it exists probably the only way
    # this would happen is if you're using an old version of git -- back when
    # the sample hooks were not executable, instead of being named ____.sample
    ln -s -f ../../script/hooks-wrapper "$HOOK_DIR/$hook"
done
